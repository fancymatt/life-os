name: Frontend CI

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run tests
        working-directory: frontend
        run: npm test -- --run --reporter=verbose
        continue-on-error: true  # Don't fail CI on test failures yet (minimal tests)

      - name: Check bundle size
        working-directory: frontend
        run: |
          npm run build

          # Check if main JS bundle is under 500KB
          BUNDLE_SIZE=$(find dist/assets -name "index-*.js" -exec du -k {} \; | cut -f1)
          BUNDLE_SIZE_MB=$(echo "scale=2; $BUNDLE_SIZE / 1024" | bc)

          echo "Bundle size: ${BUNDLE_SIZE}KB (${BUNDLE_SIZE_MB}MB)"

          if [ $BUNDLE_SIZE -gt 512 ]; then
            echo "⚠️  Warning: Bundle size exceeds 500KB target"
            # Don't fail CI, just warn
          else
            echo "✅ Bundle size within target"
          fi
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint || true
        continue-on-error: true  # Don't fail CI on linting errors yet

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
          retention-days: 7
